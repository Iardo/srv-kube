# References
# --------------------
# https://github.com/opf/openproject/blob/dev/docker-compose.yml
# https://www.openproject.org/docs/installation-and-operations/installation/docker-compose/
# https://www.openproject.org/docs/installation-and-operations/configuration/environment/
# https://github.com/opf/openproject/tree/dev/docs/installation-and-operations/configuration/environment
# https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/README.md


# Credentials
# --------------------
# user: admin
# pass: admin

x-discovery:
  &discovery
    OPENPROJECT_HTTPS: ${OPEN_PROJECT_HTTPS:-false}
    OPENPROJECT_APP__TITLE: ${OPEN_PROJECT_TITLE:-OpenProject}
    OPENPROJECT_HOST__NAME: ${OPEN_PROJECT_HOST_NAME:-localhost}
    OPENPROJECT_ADDITIONAL__HOST__NAMES: ${OPEN_PROJECT_HOST_NAME_ADDITIONAL:-'["127.0.0.1","localhost"]'}
    OPENPROJECT_CACHE__MEMCACHE__SERVER: open-project-cache:11211
    DATABASE_URL: postgres://openproject:openproject@open-project-database:5432/openproject?pool:20&encoding=unicode&reconnect=true

networks:
  open-project:
    name: open-project

volumes:
  open-project-assets:
    name: open-project-assets
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/assets
  open-project-backup:
    name: open-project-backup
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/backup
  open-project-database:
    name: open-project-database

services:
  # open-project-autoheal:
  #   image: willfarrell/autoheal:1.2.0
  #   container_name: open-project-autoheal
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     AUTOHEAL_CONTAINER_LABEL: autoheal
  #     AUTOHEAL_INTERVAL: 30
  #     AUTOHEAL_START_PERIOD: 600

  open-project-web:
    image: openproject/openproject:16-slim
    container_name: open-project-web
    command: "./docker/prod/web"
    restart: unless-stopped
    depends_on:
      - open-project-database
      - open-project-cache
      - open-project-seeder
    networks:
      - open-project
    labels:
      - autoheal=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://open-project-web:80${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}/health_checks/default"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    volumes:
      - open-project-assets:/var/openproject/assets
    env_file: .env
    environment:
      <<: *discovery

  open-project-proxy:
    image: openproject/proxy
    container_name: open-project-proxy
    restart: unless-stopped
    depends_on:
      - open-project-web
    build:
      context: ./code/proxy
      dockerfile: dockerfile
    networks:
      - open-project
    ports:
      - ${OPEN_PROJECT_WEB_HTTP:-8080}:80
    volumes:
      - ./caddyfile:/etc/caddy/Caddyfile

  open-project-database:
    image: postgres:13
    container_name: open-project-database
    restart: unless-stopped
    networks:
      - open-project
    ports:
      - ${OPEN_PROJECT_DATABASE:-5432}:5432
    volumes:
      - ./logs/database:/logs
      - open-project-backup:/backups
      - open-project-database:/var/lib/postgresql/data
    stop_grace_period: "3s"
    environment:
      PGPORT: 5432
      POSTGRES_DB: ${POSTGRESQL_NAME:?}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS:?}
      POSTGRES_USER: ${POSTGRESQL_USER:?}

  open-project-seeder:
    image: openproject/openproject:16-slim
    container_name: open-project-seeder
    restart: on-failure
    command: "./docker/prod/seeder"
    networks:
      - open-project
    volumes:
      - open-project-assets:/var/openproject/assets
    env_file: .env
    environment:
      <<: *discovery

  open-project-backup:
    container_name: open-project-backup
    restart: unless-stopped
    command: tail -f /dev/null
    networks:
      - open-project
    build:
      context: ./code/control
      dockerfile: dockerfile
    volumes:
      - ./.env:/.env
      - ./logs/database:/logs
      - ./code/script/backup.sh:/backup.sh
      - open-project-assets:/var/openproject/assets
      - open-project-backup:/backups
      - open-project-database:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data
      OPDATA: /var/openproject/assets
    
  open-project-upgrade:
    container_name: open-project-upgrade
    restart: on-failure
    entrypoint: ["/upgrade.sh"]
    build:
      context: ./code/control
      dockerfile: dockerfile
    networks:
      - open-project
    volumes:
      - ./code/script/upgrade.sh:/upgrade.sh
      - open-project-database:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data

  open-project-cache:
    image: memcached:1.6.38
    container_name: open-project-cache
    restart: unless-stopped
    networks:
      - open-project
    environment:
      MEMCACHED_TCP_PORT: 11211

  open-project-worker:
    image: openproject/openproject:16-slim
    container_name: open-project-worker
    restart: unless-stopped
    command: "./docker/prod/worker"  
    depends_on:
      - open-project-database
      - open-project-cache
      - open-project-seeder
    networks:
      - open-project
    volumes:
      - open-project-assets:/var/openproject/assets
    env_file: .env
    environment:
      <<: *discovery

  open-project-cron:
    image: openproject/openproject:16-slim
    container_name: open-project-cron
    command: "./docker/prod/cron"
    restart: unless-stopped
    depends_on:
      - open-project-database
      - open-project-cache
      - open-project-seeder
    networks:
      - open-project
